{"id":"node_modules/vega-lite/build/src/compile/header/component.js","dependencies":[{"name":"/Users/zhangyanhua/Desktop/test/js-tensorFlow/node_modules/vega-lite/build/src/compile/header/component.js.map","includedInParent":true,"mtime":1703400111067},{"name":"/Users/zhangyanhua/Desktop/test/js-tensorFlow/node_modules/vega-lite/src/compile/header/component.ts","includedInParent":true,"mtime":1703400111067},{"name":"/Users/zhangyanhua/Desktop/test/js-tensorFlow/package.json","includedInParent":true,"mtime":1703412791966},{"name":"/Users/zhangyanhua/Desktop/test/js-tensorFlow/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":1703400111067}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HEADER_TYPES = exports.HEADER_CHANNELS = void 0;\nconst HEADER_CHANNELS = exports.HEADER_CHANNELS = ['row', 'column'];\nconst HEADER_TYPES = exports.HEADER_TYPES = ['header', 'footer'];"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":7},"generated":{"line":7,"column":0}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":13},"generated":{"line":7,"column":6}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":28},"generated":{"line":7,"column":21}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":28},"generated":{"line":7,"column":24}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":28},"generated":{"line":7,"column":31}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":28},"generated":{"line":7,"column":32}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":28},"generated":{"line":7,"column":47}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":48},"generated":{"line":7,"column":50}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":49},"generated":{"line":7,"column":51}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":54},"generated":{"line":7,"column":56}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":56},"generated":{"line":7,"column":58}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":64},"generated":{"line":7,"column":66}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":8,"column":65},"generated":{"line":7,"column":67}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":8,"column":0}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":13},"generated":{"line":8,"column":6}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":25},"generated":{"line":8,"column":18}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":25},"generated":{"line":8,"column":21}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":25},"generated":{"line":8,"column":28}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":25},"generated":{"line":8,"column":29}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":25},"generated":{"line":8,"column":41}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":42},"generated":{"line":8,"column":44}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":43},"generated":{"line":8,"column":45}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":51},"generated":{"line":8,"column":53}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":53},"generated":{"line":8,"column":55}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":61},"generated":{"line":8,"column":63}},{"source":"../../../../src/compile/header/component.ts","name":null,"original":{"line":11,"column":62},"generated":{"line":8,"column":64}}],"sources":{"../../../../src/compile/header/component.ts":"/**\n * Utility for generating row / column headers\n */\nimport {Axis as VgAxis, SignalRef, Text} from 'vega';\nimport {FacetFieldDef} from '../../spec/facet';\n\nexport type HeaderChannel = 'row' | 'column';\nexport const HEADER_CHANNELS: HeaderChannel[] = ['row', 'column'];\n\nexport type HeaderType = 'header' | 'footer';\nexport const HEADER_TYPES: HeaderType[] = ['header', 'footer'];\n\nexport interface LayoutHeaderComponentIndex {\n  row?: LayoutHeaderComponent;\n  column?: LayoutHeaderComponent;\n  facet?: LayoutHeaderComponent;\n}\n\n/**\n * A component that represents all header, footers and title of a Vega group with layout directive.\n */\nexport interface LayoutHeaderComponent {\n  title?: Text | SignalRef;\n\n  // TODO: concat can have multiple header / footer.\n  // Need to redesign this part a bit.\n\n  facetFieldDef?: FacetFieldDef<string>;\n\n  /**\n   * An array of header components for headers.\n   * For facet, there should be only one header component, which is data-driven.\n   * For concat, there can be multiple header components that explicitly list different axes.\n   */\n  header?: HeaderComponent[];\n\n  /**\n   * An array of header components for footers.\n   * For facet, there should be only one header component, which is data-driven.\n   * For concat, there can be multiple header components that explicitly list different axes.\n   */\n  footer?: HeaderComponent[];\n}\n\n/**\n * A component that represents one group of row/column-header/footer.\n */\nexport interface HeaderComponent {\n  labels: boolean;\n\n  sizeSignal: {signal: string};\n\n  axes: VgAxis[];\n}\n"},"lineCount":null}},"error":null,"hash":"699f5074b8465def92a087aaca585525","cacheData":{"env":{}}}