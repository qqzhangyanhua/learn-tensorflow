{"id":"node_modules/vega-lite/build/src/compile/predicate.js","dependencies":[{"name":"/Users/zhangyanhua/Desktop/test/js-tensorFlow/node_modules/vega-lite/build/src/compile/predicate.js.map","includedInParent":true,"mtime":1703400111067},{"name":"/Users/zhangyanhua/Desktop/test/js-tensorFlow/node_modules/vega-lite/src/compile/predicate.ts","includedInParent":true,"mtime":1703400111067},{"name":"/Users/zhangyanhua/Desktop/test/js-tensorFlow/package.json","includedInParent":true,"mtime":1703412791966},{"name":"/Users/zhangyanhua/Desktop/test/js-tensorFlow/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":1703400111067},{"name":"vega-util","loc":{"line":1,"column":25,"index":25},"parent":"/Users/zhangyanhua/Desktop/test/js-tensorFlow/node_modules/vega-lite/build/src/compile/predicate.js","resolved":"/Users/zhangyanhua/Desktop/test/js-tensorFlow/node_modules/vega-lite/node_modules/vega-util/index.js"},{"name":"../predicate","loc":{"line":2,"column":60,"index":98},"parent":"/Users/zhangyanhua/Desktop/test/js-tensorFlow/node_modules/vega-lite/build/src/compile/predicate.js","resolved":"/Users/zhangyanhua/Desktop/test/js-tensorFlow/node_modules/vega-lite/build/src/predicate.js"},{"name":"../util","loc":{"line":3,"column":28,"index":142},"parent":"/Users/zhangyanhua/Desktop/test/js-tensorFlow/node_modules/vega-lite/build/src/compile/predicate.js","resolved":"/Users/zhangyanhua/Desktop/test/js-tensorFlow/node_modules/vega-lite/build/src/util.js"},{"name":"./selection/parse","loc":{"line":4,"column":40,"index":193},"parent":"/Users/zhangyanhua/Desktop/test/js-tensorFlow/node_modules/vega-lite/build/src/compile/predicate.js","resolved":"/Users/zhangyanhua/Desktop/test/js-tensorFlow/node_modules/vega-lite/build/src/compile/selection/parse.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.expression = expression;\nvar _vegaUtil = require(\"vega-util\");\nvar _predicate = require(\"../predicate\");\nvar _util = require(\"../util\");\nvar _parse = require(\"./selection/parse\");\n/**\n * Converts a predicate into an expression.\n */\n// model is only used for selection filters.\nfunction expression(model, filterOp, node) {\n  return (0, _util.logicalExpr)(filterOp, predicate => {\n    if ((0, _vegaUtil.isString)(predicate)) {\n      return predicate;\n    } else if ((0, _predicate.isSelectionPredicate)(predicate)) {\n      return (0, _parse.parseSelectionPredicate)(model, predicate.selection, node);\n    } else {\n      // Filter Object\n      return (0, _predicate.fieldFilterExpression)(predicate);\n    }\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":13}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":16}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":23}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":4}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":14}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":17}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":24}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":4}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":9}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":12}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":19}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":10,"column":4}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":10,"column":10}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":10,"column":13}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":10,"column":20}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":13,"column":6},"generated":{"line":15,"column":0}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":13,"column":16},"generated":{"line":15,"column":9}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":13,"column":26},"generated":{"line":15,"column":19}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":13,"column":27},"generated":{"line":15,"column":20}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":13,"column":39},"generated":{"line":15,"column":25}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":13,"column":41},"generated":{"line":15,"column":27}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":13,"column":80},"generated":{"line":15,"column":35}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":13,"column":82},"generated":{"line":15,"column":37}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":13,"column":101},"generated":{"line":15,"column":41}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":13,"column":101},"generated":{"line":15,"column":43}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":14,"column":2},"generated":{"line":16,"column":2}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":14,"column":9},"generated":{"line":16,"column":9}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":14,"column":9},"generated":{"line":16,"column":13}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":14,"column":20},"generated":{"line":16,"column":30}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":14,"column":21},"generated":{"line":16,"column":32}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":14,"column":29},"generated":{"line":16,"column":40}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":14,"column":32},"generated":{"line":16,"column":42}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":14,"column":52},"generated":{"line":16,"column":51}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":14,"column":56},"generated":{"line":16,"column":55}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":17,"column":4}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":17,"column":8}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":17,"column":12}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":15,"column":16},"generated":{"line":17,"column":30}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":15,"column":17},"generated":{"line":17,"column":32}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":15,"column":26},"generated":{"line":17,"column":41}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":15,"column":27},"generated":{"line":17,"column":42}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":15,"column":29},"generated":{"line":17,"column":44}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":16,"column":6},"generated":{"line":18,"column":6}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":16,"column":13},"generated":{"line":18,"column":13}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":16,"column":22},"generated":{"line":18,"column":22}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":17,"column":5},"generated":{"line":19,"column":5}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":17,"column":11},"generated":{"line":19,"column":11}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":17,"column":15},"generated":{"line":19,"column":15}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":17,"column":15},"generated":{"line":19,"column":19}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":17,"column":35},"generated":{"line":19,"column":50}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":17,"column":36},"generated":{"line":19,"column":52}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":17,"column":45},"generated":{"line":19,"column":61}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":17,"column":46},"generated":{"line":19,"column":62}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":17,"column":48},"generated":{"line":19,"column":64}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":18,"column":6},"generated":{"line":20,"column":6}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":18,"column":13},"generated":{"line":20,"column":13}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":18,"column":13},"generated":{"line":20,"column":17}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":18,"column":36},"generated":{"line":20,"column":47}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":18,"column":37},"generated":{"line":20,"column":49}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":18,"column":42},"generated":{"line":20,"column":54}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":18,"column":44},"generated":{"line":20,"column":56}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":18,"column":53},"generated":{"line":20,"column":65}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":18,"column":54},"generated":{"line":20,"column":66}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":18,"column":63},"generated":{"line":20,"column":75}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":18,"column":65},"generated":{"line":20,"column":77}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":18,"column":69},"generated":{"line":20,"column":81}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":18,"column":70},"generated":{"line":20,"column":82}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":19,"column":5},"generated":{"line":21,"column":5}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":19,"column":11},"generated":{"line":21,"column":11}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":22,"column":6}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":23,"column":6}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":23,"column":13}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":23,"column":17}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":23,"column":49}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":21,"column":35},"generated":{"line":23,"column":51}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":21,"column":44},"generated":{"line":23,"column":60}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":21,"column":45},"generated":{"line":23,"column":61}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":25,"column":2}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":23,"column":3},"generated":{"line":25,"column":3}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":25,"column":4}},{"source":"../../../src/compile/predicate.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":26,"column":0}}],"sources":{"../../../src/compile/predicate.ts":"import {isString} from 'vega-util';\nimport {LogicalComposition} from '../logical';\nimport {fieldFilterExpression, isSelectionPredicate, Predicate} from '../predicate';\nimport {logicalExpr} from '../util';\nimport {DataFlowNode} from './data/dataflow';\nimport {Model} from './model';\nimport {parseSelectionPredicate} from './selection/parse';\n\n/**\n * Converts a predicate into an expression.\n */\n// model is only used for selection filters.\nexport function expression(model: Model, filterOp: LogicalComposition<Predicate>, node?: DataFlowNode): string {\n  return logicalExpr(filterOp, (predicate: Predicate) => {\n    if (isString(predicate)) {\n      return predicate;\n    } else if (isSelectionPredicate(predicate)) {\n      return parseSelectionPredicate(model, predicate.selection, node);\n    } else {\n      // Filter Object\n      return fieldFilterExpression(predicate);\n    }\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"9f65473cafa8f1f88a67faee5763a8aa","cacheData":{"env":{}}}